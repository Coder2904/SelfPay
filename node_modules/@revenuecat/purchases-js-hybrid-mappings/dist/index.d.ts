export declare class PurchasesCommon {
    private static instance;
    private static proxyUrl;
    private static readonly APP_USER_ID_STORAGE_KEY;
    private purchases;
    private offeringsCache;
    static configure(configuration: {
        apiKey: string;
        appUserId: string | undefined;
        flavor: string;
        flavorVersion: string;
    }): PurchasesCommon;
    static getInstance(): PurchasesCommon;
    static setLogLevel(logLevel: string): void;
    static isConfigured(): boolean;
    static setProxyUrl(proxyUrl: string): void;
    private constructor();
    getAppUserId(): string;
    isSandbox(): boolean;
    isAnonymous(): boolean;
    setAttributes(attributes: {
        [key: string]: string | null;
    }): Promise<void>;
    setEmail(email: string | null): Promise<void>;
    setPhoneNumber(phoneNumber: string | null): Promise<void>;
    setDisplayName(displayName: string | null): Promise<void>;
    getCustomerInfo(): Promise<Record<string, unknown>>;
    getOfferings(): Promise<Record<string, unknown>>;
    getCurrentOfferingForPlacement(placementIdentifier: string): Promise<Record<string, unknown> | null>;
    logIn(appUserId: string): Promise<Record<string, unknown>>;
    logOut(): Promise<Record<string, unknown>>;
    close(): Promise<void>;
    purchasePackage(purchaseParams: {
        packageIdentifier: string;
        presentedOfferingContext: Record<string, unknown>;
        optionIdentifier?: string;
        customerEmail?: string;
        selectedLocale?: string;
        defaultLocale?: string;
    }): Promise<Record<string, unknown>>;
    private findPackageToPurchase;
    private setReservedCustomerAttribute;
    private handleError;
}

export { }
